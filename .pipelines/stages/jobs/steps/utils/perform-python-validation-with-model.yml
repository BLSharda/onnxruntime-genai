parameters:
- name: PythonScriptFolder
  type: string
- name: PythonScriptName
  type: string
- name: ModelFolder
  type: string

steps:
  - ${{ if or(eq(parameters.os, 'linux'), eq(parameters.os, 'osx')) }}:
    - ${{ if eq(parameters.ep, 'cuda') }}:
      - bash: |
          set -e -x
          az login --identity --username 63b63039-6328-442f-954b-5a64d124e5b4
          az acr login --name onnxruntimebuildcache --subscription 00c06639-6ee4-454e-8058-8d8b1703bd87
          docker pull $(CudaDockerImage)
          python_exe=/opt/python/cp310-cp310/bin/python3.10

          docker run \
            --gpus all \
            --rm \
            --volume $(Build.Repository.LocalPath):/ort_genai_src \
            --volume $(Build.BinariesDirectory):/ort_genai_binary \
            -e HF_TOKEN=$HF_TOKEN \
            -w /ort_genai_src/ $(CudaDockerImage) \
            bash -c " \
                export ORTGENAI_LOG_ORT_LIB=1 && \
                $python_exe -m pip install -r /ort_genai_src/test/python/requirements.txt && \
                $python_exe -m pip install -r /ort_genai_src/test/python/requirements-cuda.txt && \
                cd /ort_genai_src/$PythonScriptFolder) && \
                $python_exe -m pip install --no-index --find-links=/ort_genai_binary/wheel $(pip_package_name) && \
                $python_exe model-generate.py -m ./models/${{ parameters.ModelFolder }} --min_length 25 --max_length 50 --verbose"

        displayName: 'Run ${{ parameters.PythonScriptName }} With Artifact'
        workingDirectory: '$(Build.Repository.LocalPath)'
    - ${{ elseif eq(parameters.ep, 'cpu') }}:
      - bash: |
          export ORTGENAI_LOG_ORT_LIB=1
          python -m pip install -r test/python/requirements.txt
          if [[ "$(os)" == "linux" ]]; then
            python -m pip install -r test/python/requirements-cpu.txt
          fi
          if [[ "$(os)" == "osx" ]]; then
            python -m pip install -r test/python/requirements-macos.txt
          fi
          cd ${{ parameters.PythonScriptFolder }}
          python -m pip install --no-index --find-links=$(Build.BinariesDirectory)/wheel $(pip_package_name)
          python ${{ parameters.PythonScriptName }} -m ./models/${{ parameters.ModelFolder }} --min_length 25 --max_length 50 --verbose
        displayName: 'Run ${{ parameters.PythonScriptName }} With Artifact'
        workingDirectory: '$(Build.Repository.LocalPath)'

  - ${{ if eq(parameters.os, 'win') }}:
    - ${{ if eq(parameters.ep, 'cuda') }}:
      - powershell: |
          $env:AZCOPY_MSI_CLIENT_ID = "63b63039-6328-442f-954b-5a64d124e5b4";
          azcopy.exe cp --recursive "https://lotusscus.blob.core.windows.net/models/cuda_sdk/v$(cuda_version)" 'cuda_sdk'
        displayName: 'Download CUDA $(cuda_version)'
        workingDirectory: '$(Build.Repository.LocalPath)'
    - powershell: |
        python -m pip install -r test/python/requirements.txt
        if ("$(ep)" -eq "cuda") {
          $env:CUDA_PATH = '$(Build.Repository.LocalPath)\cuda_sdk\v$(cuda_version)'
          $env:PATH = "$env:CUDA_PATH\bin;$env:CUDA_PATH\extras\CUPTI\lib64;$env:PATH"
          Write-Host $env:PATH
          python -m pip install -r test/python/requirements-cuda.txt
        }
        elseif ("$(ep)" -eq "directml") {
          python -m pip install -r test/python/requirements-directml.txt
        }
        else {
          python -m pip install -r test/python/requirements-cpu.txt
        }
        cd ${{ parameters.PythonScriptFolder }}
        python -m pip install --no-index --find-links=$(Build.BinariesDirectory)/wheel $(pip_package_name)

        python ${{ parameters.PythonScriptName }} -m .\models\${{ parameters.ModelFolder }} --min_length 25 --max_length 50 --verbose
      displayName: 'Run ${{ parameters.PythonScriptName }} With Artifact'
      workingDirectory: '$(Build.Repository.LocalPath)'